paths:
  /api/review/{foodId}:
    post:
      tags:
        - Review
      security:
        - authTokenCompleted: []
      summary: Create a new review for a food item
      description: Creates a new review for the specified food item and saves it to the database.
      parameters:
        - in: path
          name: foodId
          required: true
          description: The ID of the food item to review.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  description: The rating of the food item, between 1 and 5.
                  minimum: 1
                  maximum: 5
                  example: 4
                comment:
                  type: string
                  description: The comment about the food item.
                  example: Delicious!
                customerId:
                  type: string
                  description: The ID of the user creating the review.
                  example: 60f7ea20a8b1c72f9a56c3f2
                orderId:
                  type: string
                  description: The ID of the order associated with the review.
                  example: 60f7ea20a8b1c72f9a56c3f3
              required:
                - rating
                - comment
                - customerId
                - orderId
      responses:
        '201':
          description: Review created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Review created successfully.
                  review:
                    $ref: '#/components/schemas/Review'
        '400':
          description: Bad Request. The request is invalid or malformed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Rating must be between 1 and 5.
        '500':
          description: Internal Server Error. An error occurred while processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error message.
    get:
      tags:
        - Review
      summary: Retrieve all reviews for a food item
      description: Retrieves all reviews associated with the specified food item from the database.
      parameters:
        - in: path
          name: foodId
          required: true
          description: The ID of the food item to retrieve reviews for.
          schema:
            type: string
      responses:
        '200':
          description: Reviews retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        '500':
          description: Internal Server Error. An error occurred while processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error message.
components:
  schemas:
    Review:
      type: object
      properties:
        _id:
          type: string
        rating:
          type: integer
        comment:
          type: string
        customerId:
          type: string
        dishId:
          type: string
        orderId:
          type: string
