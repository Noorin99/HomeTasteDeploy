paths:
  /api/orders:
    get:
      summary: Get Orders for User
      description: Retrieve orders for the authenticated user
      tags:
        - Order
      security:
        - authTokenCompleted: []
      responses:
        '200':
          description: Orders successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '404':
          description: User or Orders not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden, you must be a customer
        '500':
          description: Internal server error

  /api/orders/create:
    post:
      summary: Create a new order
      tags:
        - Order
      security:
        - authTokenCompleted: []
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Not Found, user or cart not found, or cart is empty
        '401':
          description: Unauthorized
        '403':
          description: Forbidden, you must be a customer
        '500':
          description: Internal server error

  /api/orders/{orderId}/cancel:
    put:
      summary: Cancel an order by ID
      parameters:
        - in: path
          name: orderId
          required: true
          description: The ID of the order to cancel.
          schema:
            type: string
      tags:
        - Order
      security:
        - authTokenCompleted: []
      responses:
        '200':
          description: Order canceled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order or user not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden, you must be a customer
        '500':
          description: Internal server error

components:
  schemas:
    Order:
      type: object
      properties:
        _id:
          type: string
          example: 64b9781dbee12ba0fe169877
        orderDetails:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetail'
        orderStatus:
          type: string
          enum:
            - Pending
            - Approved
            - Preparing
            - On The Way
            - Delivered
        totalPrice:
          type: number
          exapmle: 10
        customer:
          type: object
          properties:
            _id:
              type: string
              example: 64b9781dbee12ba0fe169821
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Doe
            email:
              type: string
              example: john@example.com
            phone:
              type: string
              example: 05340715555
            address:
              type: object
              properties:
                city:
                  type: string
                  example: Istanbul
                country:
                  type: string
                  example: Turkiye
        cookerId:
          type: string
          example: 64b9781dbee12ba0fe169899
    OrderDetail:
      type: object
      properties:
        quantity:
          type: number
          example: 1
        dishId:
          type: string
          exampel: 64ca2f92892c25849663e947
